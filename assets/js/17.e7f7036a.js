(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{377:function(s,t,n){"use strict";n.r(t);var a=n(44),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h4",{attrs:{id:"删除链表的倒数第-n-个结点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除链表的倒数第-n-个结点"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"}},[s._v("删除链表的倒数第 N 个结点"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("难度中等1560收藏分享切换为英文接收动态反馈")]),s._v(" "),n("p",[s._v("给你一个链表，删除链表的倒数第 "),n("code",[s._v("n")]),s._v(" 个结点，并且返回链表的头结点。")]),s._v(" "),n("p",[s._v("**进阶：**你能尝试使用一趟扫描实现吗？")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：head = [1,2,3,4,5], n = 2\n输出：[1,2,3,5]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("示例 2：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：head = [1], n = 1\n输出：[]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("示例 3：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：head = [1,2], n = 1\n输出：[1]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("链表中结点的数目为 "),n("code",[s._v("sz")])]),s._v(" "),n("li",[n("code",[s._v("1 <= sz <= 30")])]),s._v(" "),n("li",[n("code",[s._v("0 <= Node.val <= 100")])]),s._v(" "),n("li",[n("code",[s._v("1 <= n <= sz")])])]),s._v(" "),n("p",[n("strong",[s._v("AC代码")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Definition for singly-linked list.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# class ListNode:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     def __init__(self, val=0, next=None):")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         self.val = val")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         self.next = next")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeNthFromEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ListNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ListNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        ans"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ListNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("head\n        s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("w"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ans\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(x.val,y.val)")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(x.val)")]),s._v("\n            s"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(x.val,y.val)")]),s._v("\n            s"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),s._v("\n            w"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),s._v("\n            \n        w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("next")]),s._v("\n\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("双指针+链表")])]),s._v(" "),n("li",[n("p",[s._v("找到倒数第"),n("code",[s._v("n")]),s._v("个节点，因此我们可以使用两个指针"),n("code",[s._v("s")]),s._v("和"),n("code",[s._v("w")]),s._v("同时对链表进行遍历，并且"),n("code",[s._v("s")]),s._v("比"),n("code",[s._v("w")]),s._v("超前"),n("code",[s._v("n")]),s._v("个节点。当"),n("code",[s._v("s")]),s._v("遍历到链表的末尾时，"),n("code",[s._v("w")]),s._v("就恰好处于倒数第 "),n("code",[s._v("n")]),s._v("个节点。")])]),s._v(" "),n("li",[n("p",[s._v("初始时"),n("code",[s._v("s")]),s._v("和"),n("code",[s._v("w")]),s._v("均指向头节点。首先使用"),n("code",[s._v("s")]),s._v("对链表进行遍历，遍历的次数为"),n("code",[s._v("n")]),s._v("。此时，"),n("code",[s._v("s")]),s._v("和"),n("code",[s._v("w")]),s._v("之间间隔了"),n("code",[s._v("n−1")]),s._v(" 个节点，即"),n("code",[s._v("s")]),s._v("比"),n("code",[s._v("w")]),s._v("超前了"),n("code",[s._v("n")]),s._v("个节点。")])]),s._v(" "),n("li",[n("p",[s._v("如果我们能够得到的是倒数第"),n("code",[s._v("n")]),s._v("个节点的前驱节点而不是倒数第 "),n("code",[s._v("n")]),s._v(" 个节点的话，删除操作会更加方便。因此在初始时将"),n("code",[s._v("w")]),s._v("指向哑节点，其余的操作步骤不变。这样一来，当"),n("code",[s._v("s")]),s._v("遍历到链表的末尾时，"),n("code",[s._v("w")]),s._v("的下一个节点就是我们需要删除的节点。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);